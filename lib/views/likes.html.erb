<script>
	function statusChangeCallback(response) {
	  // The response object is returned with a status field that lets the
	  // app know the current login status of the person.
	  // Full docs on the response object can be found in the documentation
	  // for FB.getLoginStatus().
	  if (response.status === 'connected') {
	    // Logged into your app and Facebook.
	    launchApp();
	  } else if (response.status === 'not_authorized') {
	    // The person is logged into Facebook, but not your app.
	    document.getElementById('status').innerHTML = 'Please log ' +
	      'into this app.';
	  } else {
	    // The person is not logged into Facebook, so we're not sure if
	    // they are logged into this app or not.
	    document.getElementById('status').innerHTML = 'Please log ' +
	      'into Facebook.';
	  }
	}

	function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  var placehold = function(element) {
		element.setAttribute('src', "http://www.adweek.com/socialtimes/wp-content/uploads/sites/2/2013/01/pages-flag.png")
	};

	var launchApp = function(){

		// Adding Load More link
		var likes = document.createElement('div');
    likes.setAttribute("class", "likes");

		var link = document.createElement('a');
    link.setAttribute("id", "loadnext");
    link.setAttribute("href", "#");
    link.innerHTML = '<span>Load more</span>';
		link.onclick = function(e){
			e.preventDefault();
			loadMore(this);
		};

    document.getElementsByTagName("fb:login-button")[0].style.display = "none";
	  document.body.appendChild(likes);
    document.body.appendChild(link);
	  var filler = document.createElement('div');
	  filler.setAttribute('id', 'filler');
	  document.body.appendChild(filler);

		var loadMore = function(link) {
			var like_url = "/me/likes";
			if (link.getAttribute("data-after")) { like_url+="?after="+link.getAttribute("data-after"); };
			FB.api(
				like_url,
				function (response) {
				  if (response && !response.error) {
				    addLikes(response);
				  }
				}
			);
		};

		var select = function() {
			if (this.getAttribute("class").indexOf("selected") > -1){
				this.setAttribute("class", this.getAttribute("class").replace("selected", ""));
			} else {
				this.setAttribute("class", this.getAttribute("class") + " selected");
				this.class += "select";
			};
		};

		var addLikes = function(response){
		  var nextLink = response.paging.next
		  if (nextLink) {
			  link.setAttribute('data-after', new RegExp('^.*facebook\.com/v\\d*\\.\\d*/.*after=(.*)(&.*)?$').exec(nextLink)[1]);
			  var likes = response.data;
			  for(var i=0; i < likes.length; i++){

					FB.api(
				    "/"+likes[i].id+"/picture",
				    function(likeObject){
					    return function(response){
					      if (response && !response.error) {
					      	var image = response.data.url;

					      	var like_container = document.createElement('div');
					      	like_container.setAttribute('class', 'like-container');
	    						var like = document.createElement('a');
	    						like.onclick = select;
							  	like.setAttribute('class', 'like');
							  	like.setAttribute('data-id', likeObject.id);
							  	like.innerHTML = "<img src=\""+image+"\" onerror=\"placehold(this);\">";
							  	like.innerHTML += "<h4>"+ likeObject.name +"</h4>";
							  	like_container.appendChild(like);
							  	document.getElementsByClassName("likes")[0].appendChild(like_container);
					      };
					    }
				    }(likes[i]));
					}
			  } else {
			  	link.style.display = "none";
			  }
		};

		loadMore(link);
	};

	document.addEventListener("fbload", function() {
		checkLoginState();
	});

</script>

<fb:login-button scope="likes" onlogin="checkLoginState();"></fb:login-button>
